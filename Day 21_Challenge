Rotate and Delete

Given an array arr integers. Assume sz to be the initial size of the array. 
Do the following operations exactly sz/2 times. In every kth (1<= k <= sz/2) operation:
Right-rotate the array clockwise by 1.
Delete the (nâ€“ k + 1)th element from begin.
Now, Return the first element of the array.
Note: Here n keeps on decreasing with every operation.

class Solution {
  public:
    int rotateDelete(vector<int> &arr) {
        // Your code here
        int n=arr.size();
        int p=n;
        int q=1;
        for(int i=0;i<n/2;i++)
        {
            int temp=arr[p-1];
            for(int j=p-1;j>0;j--)
            {
                arr[j]=arr[j-1];
            }
            arr[0]=temp;
            arr.erase(arr.end()-q);
            p--;
            q++;
        }
        return arr[0];
    }
};
