Minimal Cost

There is an array arr of heights of stone and Geek is standing at the first stone and can jump to one of the following: 
Stone i+1, i+2, ... i+k stone, where k is the maximum number of steps that can be jumped and cost will be |hi-hj| is incurred, where j is the stone to land on. 
Find the minimum possible total cost incurred before the Geek reaches the last stone.

class Solution {
  public:
    int minimizeCost(int k, vector<int>& arr) {
    int n = arr.size();
    vector<int> dp(n, INT_MAX);
    dp[0] = 0;

    for (int i = 1; i < n; ++i) {
        for (int j = max(0, i - k); j < i; ++j) {
            dp[i] = min(dp[i], dp[j] + abs(arr[i] - arr[j]));
        }
    }

    return dp[n - 1];
    }
};
