Given an expression string x. Examine whether the pairs and the orders of {,},(,),[,] are correct in exp.
For example, the function should return 'true' for exp = [()]{}{[()()]()} and 'false' for exp = [(]).
Note: The driver code prints "balanced" if function return true, otherwise it prints "not balanced".

class Solution
{
    public:
    //Function to check if brackets are balanced or not.
    bool ispar(string x)
    {
        // Your code here
        stack <char> s;
        for(int i=0;i<x.length();i++)
        {
            char ch=x[i];
            if(ch=='('||ch=='{'||ch=='[')
            {
                s.push(ch);
            }
            else
            {
                if(!s.empty())
                {
                    char top=s.top();
                    if((ch==')'&&top=='(')||(ch==']'&&top=='[')||(ch=='}'&&top=='{'))
                    {
                        s.pop();
                    }
                    else
                    {
                        return false;
                    }
                }
                else
                {
                    return false;
                }
            }
        }
        if(s.empty())
        {
            return true;
        }
        else
        {
            return false;
        }
    }
};
