Binary Tree to DLL

Given a Binary Tree (BT), convert it to a Doubly Linked List (DLL) in place. 
The left and right pointers in nodes will be used as previous and next pointers respectively in converted DLL. 
The order of nodes in DLL must be the same as the order of the given Binary Tree. 
The first node of Inorder traversal (leftmost node in BT) must be the head node of the DLL.

class Solution {
  public:
    void traversal(Node* root, vector<Node*> &vec)
    {
        if(!root)
        return;
        traversal(root->left, vec);
        vec.push_back(root);
        traversal(root->right, vec);
    }
    
    Node* bToDLL(Node* root) 
    {
        // code here
        vector<Node*> vec;
        traversal(root, vec);
        if(vec.size()==1)
        {
            return root;
        }
        for(int i=0;i<vec.size();i++)
        {
            if(i==0)
            {
                vec[i]->left=NULL;
                vec[i]->right=vec[i+1];
            }
            else if(i==vec.size()-1)
            {
                vec[i]->left=vec[i-1];
                vec[i]->right=NULL;
            }
            else
            {
                vec[i]->left=vec[i-1];
                vec[i]->right=vec[i+1];
            }
        }
        return vec[0];
    }
};
